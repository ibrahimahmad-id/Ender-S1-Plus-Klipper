#======================================================
# GLOBAL
#======================================================

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

#======================================================
# FILAMENT
#======================================================

[gcode_macro LOAD_FILAMENT]
description: Load new filament and purge a little
gcode:
    SAVE_GCODE_STATE NAME=loading_filament
    M117 Loading Filament
    M83
    G92 E0.0
    G1 E30 F600
    G1 E15 F600
    G92 E20
    RESTORE_GCODE_STATE NAME=loading_filament


[gcode_macro UNLOAD_FILAMENT]
description: Unload installed filament
gcode:
    SAVE_GCODE_STATE NAME=unloading_filament
    M117 Unloading Filament 
    G91 # set relative
    G1 E10 F100 
    G92 E0.0
    G1 E-5 F3000 # Unload filament from sprite 5mm 
    G92 E-5
    RESTORE_GCODE_STATE NAME=unloading_filament

[gcode_macro CLEANING_FILAMENT]
description: Load cleaning filament and unload it, intermediaries between filament types
gcode:
    SAVE_GCODE_STATE NAME=cleaning_filament
    M117 Set hotend temperature to the last used filament print temperature!
    G92 E0.0
    G1 E30 F600 # Load cleaning filament
    G1 E30 F600
    G1 E15 F300
    M109 S130 # Wait for cold pull temp
    G1 E10 F100
    G1 E-5 F3000 # unload cleaning filament
    G1 E-30 F600
    RESTORE_GCODE_STATE NAME=cleaning_filament

[gcode_macro PURGE]
description: Extrudes filament, used to clean out previous filament
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=PURGE_state
    G91                   # relative coords
    G1 E45.0 F{ 5 * 60 }  # purge
    RESTORE_GCODE_STATE NAME=PURGE_state
  {% endif %}

[gcode_macro CHANGE_FILAMENT]
description: Park printhead, unload installed filament, and extrude new filament
gcode:
    # Save the G-code state
    SAVE_GCODE_STATE NAME=filament_change

    # Move the extruder to the side
    {% if printer.toolhead.homed_axes != "xyz" %}  #Home if not homed yet
        G28
        G0 X105
    {% endif %}
    G1 X5 Y225 F4000
    
    # Unload the filament
    {% if printer.extruder.can_reverse %} 
        G91
        G1 E-10 F100
        G92 E0
        G90
    {% else %}
        M117 Extruder cannot reverse
    {% endif %}
    
    # Wait for user interaction to confirm new roll of filament
    M117 Please insert new filament and confirm
    
    # Prime the nozzle with new filament
    G91
    G1 E10 F100
    G92 E0
    G1 E5 F200
    G90

    # Restore the G-code state
    RESTORE_GCODE_STATE NAME=filament_change

#======================================================
# START / END 
#======================================================

[gcode_macro START_PRINT]
description: Strarting GCODE for Slicer
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    
    M140 S{BED_TEMP} # Start bed heating
    M104 S{EXTRUDER_TEMP} # Start nozzle heating to print temp
    
    G90 # Use absolute coordinates
    G28 # Home the printer
    
    M190 S{BED_TEMP} # Wait for bed to reach temperature

    BED_MESH_CALIBRATE # KAMP leveling

    M109 S{EXTRUDER_TEMP} # Set and wait for nozzle to reach temperature
    
    LINE_PURGE # KAMP draw line purging

[gcode_macro END_PRINT]
description: End of print GCODE for Slicer
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    # Move hotend to corner back
    G90
    G0 X0 Y300
    # Disable steppers
    M84


#======================================================
# CALIBRATION
#======================================================

[gcode_macro PID_HOTEND]
description: PID Tune for the Extruder @ 240 C
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=240
  TURN_OFF_HEATERS
  SAVE_CONFIG

[gcode_macro PID_BED]
description: PID Tune for the Bed @ 100 C
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=100
  TURN_OFF_HEATERS
  SAVE_CONFIG

[gcode_macro BED_TRAMMING_1]
description: Bed tramming step 1
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  M140 S{BED_TEMP}	
  G28
  M190 S{BED_TEMP}
  SCREWS_TILT_CALCULATE

[gcode_macro BED_TRAMMING_2]
description: Bed tramming step 2, for additional precision
gcode:
  SCREWS_TILT_CALCULATE

[gcode_macro BED_MESH]
description: Manual bed probing, not used for print due to KAMP
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  M140 S{BED_TEMP}
  G28
  M190 S{BED_TEMP}
  BED_MESH_CLEAR
  BED_MESH_CALIBRATE
  TURN_OFF_HEATERS
  SAVE_CONFIG

[screws_tilt_adjust]
screw1: 57.70, 67
screw1_name: front left screw
screw2: 297.4, 67
screw2_name: front right screw
screw3: 297.4, 303
screw3_name: rear right screw
screw4: 57.80, 303
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 200.
screw_thread: CW-M4

#======================================================
# MAINTENANCE
#======================================================

[gcode_macro MOVE_PRINTHEAD_TO_MIDDLE]
description: Moves nozzle to the center of the bed
gcode:
  HOME_CHECK
  G1 X150 Y150 Z10 F6000
 
[gcode_macro HOME_CHECK]
description: Checks if the printer is homed, it not it homes the printer
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}

[gcode_macro INSPECT_MID_PRINT]
description: Moves the extruder out of the way and bed forward
gcode:
    HOME_CHECK
    {% set z_lift = params.z_lift|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ z_lift, z_diff ] | min%}
    G1 Z{ z_safe_lift }
    G1 X10 Y220 F4000
